DROP SEQUENCE IF EXISTS current_fwis_id_seq;
CREATE SEQUENCE current_fwis_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS england_010k_gid_seq;
CREATE SEQUENCE england_010k_gid_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS ffoi_file_ffoi_file_id_seq;
CREATE SEQUENCE ffoi_file_ffoi_file_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS ffoi_forecast_ffoi_forecast_id_seq;
CREATE SEQUENCE ffoi_forecast_ffoi_forecast_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS ffoi_station_ffoi_station_id_seq;
CREATE SEQUENCE ffoi_station_ffoi_station_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS ffoi_station_threshold_ffoi_station_threshold_id_seq;
CREATE SEQUENCE ffoi_station_threshold_ffoi_station_threshold_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS flood_alert_area_2_gid_seq;
CREATE SEQUENCE flood_alert_area_2_gid_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS flood_alert_area_gid_seq;
CREATE SEQUENCE flood_alert_area_gid_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS flood_warning_area_gid_seq;
CREATE SEQUENCE flood_warning_area_gid_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS fwis_id_seq;
CREATE SEQUENCE fwis_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS impact_id_seq;
CREATE SEQUENCE impact_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS sls_telemetry_station_id_seq;
CREATE SEQUENCE sls_telemetry_station_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS sls_telemetry_value_parent_telemetry_value_parent_id_seq;
CREATE SEQUENCE sls_telemetry_value_parent_telemetry_value_parent_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS sls_telemetry_value_telemetry_value_id_seq;
CREATE SEQUENCE sls_telemetry_value_telemetry_value_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS station_imtd_threshold_station_threshold_id_seq;
CREATE SEQUENCE station_imtd_threshold_station_threshold_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS station_threshold_station_threshold_id_seq;
CREATE SEQUENCE station_threshold_station_threshold_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS telemetry_context_telemetry_context_id_seq;
CREATE SEQUENCE telemetry_context_telemetry_context_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE IF EXISTS time_series_region_lkp_time_series_lkp_id_seq;
CREATE SEQUENCE time_series_region_lkp_time_series_lkp_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP TABLE IF EXISTS current_load_timestamp;
CREATE TABLE current_load_timestamp (id INTEGER NOT NULL, load_timestamp BIGINT, CONSTRAINT pk_current_load_timestamp PRIMARY KEY (id));
DROP TABLE IF EXISTS databasechangelog;
CREATE TABLE databasechangelog (id CHARACTER VARYING(255) NOT NULL, author CHARACTER VARYING(255) NOT NULL, filename CHARACTER VARYING(255) NOT NULL, dateexecuted TIMESTAMP(6) WITHOUT TIME ZONE NOT NULL, orderexecuted INTEGER NOT NULL, exectype CHARACTER VARYING(10) NOT NULL, md5sum CHARACTER VARYING(35), description CHARACTER VARYING(255), comments CHARACTER VARYING(255), tag CHARACTER VARYING(255), liquibase CHARACTER VARYING(20), contexts CHARACTER VARYING(255), labels CHARACTER VARYING(255), deployment_id CHARACTER VARYING(10));
DROP TABLE IF EXISTS databasechangeloglock;
CREATE TABLE databasechangeloglock (id INTEGER NOT NULL, locked BOOLEAN NOT NULL, lockgranted TIMESTAMP(6) WITHOUT TIME ZONE, lockedby CHARACTER VARYING(255), CONSTRAINT pk_databasechangeloglock PRIMARY KEY (id));
DROP TABLE IF EXISTS england_010k;
CREATE TABLE england_010k (gid SERIAL NOT NULL, region_id NUMERIC, reg_name CHARACTER VARYING(22), reg_prop_n CHARACTER VARYING(24), reg_addr_1 CHARACTER VARYING(25), reg_addr_2 CHARACTER VARYING(25), reg_town CHARACTER VARYING(22), reg_pcode CHARACTER VARYING(20), geom geometry, PRIMARY KEY (gid));
DROP TABLE IF EXISTS ffoi_max;
CREATE TABLE ffoi_max (telemetry_id TEXT NOT NULL, value NUMERIC, value_date TIMESTAMP(6) WITH TIME ZONE, filename TEXT, updated_date TIMESTAMP(6) WITH TIME ZONE, CONSTRAINT pk_ffoi_max_telemetry_id PRIMARY KEY (telemetry_id));
DROP TABLE IF EXISTS ffoi_station;
CREATE TABLE ffoi_station (ffoi_station_id BIGSERIAL NOT NULL, rloi_id INTEGER NOT NULL, CONSTRAINT pk_ffoi_station_id PRIMARY KEY (ffoi_station_id));
DROP TABLE IF EXISTS ffoi_station_threshold;
CREATE TABLE ffoi_station_threshold (ffoi_station_threshold_id BIGSERIAL NOT NULL, ffoi_station_id BIGINT NOT NULL, fwis_code TEXT NOT NULL, value NUMERIC NOT NULL, CONSTRAINT pk_ffoi_station_threshold_id PRIMARY KEY (ffoi_station_threshold_id));
DROP TABLE IF EXISTS flood_alert_area;
CREATE TABLE flood_alert_area (gid SERIAL NOT NULL, area CHARACTER VARYING(100), fws_tacode CHARACTER VARYING(50), ta_name CHARACTER VARYING(100), descrip CHARACTER VARYING(254), la_name CHARACTER VARYING(254), qdial CHARACTER VARYING(50), river_sea CHARACTER VARYING(254), geom geometry, PRIMARY KEY (gid));
DROP TABLE IF EXISTS flood_alert_area_2;
CREATE TABLE flood_alert_area_2 (gid SERIAL NOT NULL, area CHARACTER VARYING(100), fws_tacode CHARACTER VARYING(50), ta_name CHARACTER VARYING(100), descrip CHARACTER VARYING(254), la_name CHARACTER VARYING(254), qdial CHARACTER VARYING(50), river_sea CHARACTER VARYING(254), geom geometry, PRIMARY KEY (gid));
DROP TABLE IF EXISTS flood_alert_area_20220223_backup;
CREATE TABLE flood_alert_area_20220223_backup (gid INTEGER, area CHARACTER VARYING(100), fws_tacode CHARACTER VARYING(50), ta_name CHARACTER VARYING(100), descrip CHARACTER VARYING(254), la_name CHARACTER VARYING(254), qdial CHARACTER VARYING(50), river_sea CHARACTER VARYING(254), geom geometry);
DROP TABLE IF EXISTS flood_alert_area_20220511_backup;
CREATE TABLE flood_alert_area_20220511_backup (gid INTEGER, area CHARACTER VARYING(100), fws_tacode CHARACTER VARYING(50), ta_name CHARACTER VARYING(100), descrip CHARACTER VARYING(254), la_name CHARACTER VARYING(254), qdial CHARACTER VARYING(50), river_sea CHARACTER VARYING(254), geom geometry);
DROP TABLE IF EXISTS flood_alert_area_valid;
CREATE TABLE flood_alert_area_valid (area CHARACTER VARYING(100), fws_tacode CHARACTER VARYING(50), ta_name CHARACTER VARYING(100), descrip CHARACTER VARYING(254), la_name CHARACTER VARYING(254), qdial CHARACTER VARYING(50), river_sea CHARACTER VARYING(254), geom geometry);
DROP TABLE IF EXISTS flood_warning_area;
CREATE TABLE flood_warning_area (gid SERIAL NOT NULL, area CHARACTER VARYING(100), fws_tacode CHARACTER VARYING(50), ta_name CHARACTER VARYING(100), descrip CHARACTER VARYING(254), la_name CHARACTER VARYING(254), parent CHARACTER VARYING(50), qdial CHARACTER VARYING(50), river_sea CHARACTER VARYING(254), geom geometry, PRIMARY KEY (gid));
DROP TABLE IF EXISTS flood_warning_area_20220223_backup;
CREATE TABLE flood_warning_area_20220223_backup (gid INTEGER, area CHARACTER VARYING(100), fws_tacode CHARACTER VARYING(50), ta_name CHARACTER VARYING(100), descrip CHARACTER VARYING(254), la_name CHARACTER VARYING(254), parent CHARACTER VARYING(50), qdial CHARACTER VARYING(50), river_sea CHARACTER VARYING(254), geom geometry);
DROP TABLE IF EXISTS flood_warning_area_20220511_backup;
CREATE TABLE flood_warning_area_20220511_backup (gid INTEGER, area CHARACTER VARYING(100), fws_tacode CHARACTER VARYING(50), ta_name CHARACTER VARYING(100), descrip CHARACTER VARYING(254), la_name CHARACTER VARYING(254), parent CHARACTER VARYING(50), qdial CHARACTER VARYING(50), river_sea CHARACTER VARYING(254), geom geometry);
DROP TABLE IF EXISTS fwis;
CREATE TABLE fwis (id BIGSERIAL NOT NULL, situation TEXT, ta_id INTEGER, ta_code CHARACTER VARYING(200), ta_name TEXT, ta_description TEXT, quick_dial INTEGER, ta_version INTEGER, ta_category CHARACTER VARYING(200), owner_area CHARACTER VARYING(200), ta_created_date TIMESTAMP(6) WITH TIME ZONE, ta_modified_date TIMESTAMP(6) WITH TIME ZONE, situation_changed TIMESTAMP(6) WITH TIME ZONE, severity_changed TIMESTAMP(6) WITH TIME ZONE, message_received TIMESTAMP(6) WITH TIME ZONE, severity_value INTEGER, severity CHARACTER VARYING(200), PRIMARY KEY (id));
DROP TABLE IF EXISTS impact;
CREATE TABLE impact (id BIGSERIAL NOT NULL, rloi_id INTEGER NOT NULL, value NUMERIC, units TEXT, comment TEXT, short_name TEXT, description TEXT, type TEXT, obs_flood_year TEXT, obs_flood_month TEXT, source TEXT, lat NUMERIC, lng NUMERIC, geom geometry, PRIMARY KEY (id));
DROP TABLE IF EXISTS imtd_niki;
CREATE TABLE imtd_niki (station_threshold_id BIGINT DEFAULT nextval('station_imtd_threshold_station_threshold_id_seq'::regclass) NOT NULL, station_id BIGINT NOT NULL, fwis_code TEXT NOT NULL, fwis_type CHARACTER(1) NOT NULL, direction CHARACTER(1) NOT NULL, value NUMERIC NOT NULL, CONSTRAINT pk_station_imtd_threshold PRIMARY KEY (station_threshold_id));
DROP TABLE IF EXISTS river;
CREATE TABLE river (id CHARACTER VARYING(200) NOT NULL, name CHARACTER VARYING(200), qualified_name CHARACTER VARYING(250), PRIMARY KEY (id));
DROP TABLE IF EXISTS river_display;
CREATE TABLE river_display (id INTEGER, local_name CHARACTER VARYING, qualified_name CHARACTER VARYING, river_id CHARACTER VARYING);
DROP TABLE IF EXISTS river_display_name;
CREATE TABLE river_display_name (river_id TEXT, display TEXT);
DROP TABLE IF EXISTS river_stations;
CREATE TABLE river_stations (river_id CHARACTER VARYING(200), rloi_id INTEGER, rank INTEGER);
DROP TABLE IF EXISTS river_stations_list_test;
CREATE TABLE river_stations_list_test (id CHARACTER VARYING(200), name CHARACTER VARYING(200), rloi_id INTEGER, rank INTEGER, display_name TEXT);
DROP TABLE IF EXISTS sls_telemetry_station;
CREATE TABLE sls_telemetry_station (telemetry_station_id BIGINT DEFAULT nextval('sls_telemetry_station_id_seq'::regclass) NOT NULL, station_reference TEXT NOT NULL, region TEXT, station_name TEXT, ngr CHARACTER VARYING(50), easting INTEGER, northing INTEGER, CONSTRAINT pk_sls_telemetry_station_id PRIMARY KEY (telemetry_station_id), CONSTRAINT unique_station UNIQUE (station_reference, region));
DROP TABLE IF EXISTS sls_telemetry_value;
CREATE TABLE sls_telemetry_value (telemetry_value_id BIGSERIAL NOT NULL, telemetry_value_parent_id BIGINT NOT NULL, value NUMERIC, processed_value NUMERIC, value_timestamp TIMESTAMP(6) WITH TIME ZONE NOT NULL, error BOOLEAN NOT NULL, CONSTRAINT pk_sls_telemetry_value_id PRIMARY KEY (telemetry_value_id));
DROP TABLE IF EXISTS sls_telemetry_value_parent;
CREATE TABLE sls_telemetry_value_parent (telemetry_value_parent_id BIGSERIAL NOT NULL, filename TEXT NOT NULL, imported TIMESTAMP(6) WITH TIME ZONE NOT NULL, rloi_id INTEGER NOT NULL, station TEXT NOT NULL, region TEXT NOT NULL, start_timestamp TIMESTAMP(6) WITH TIME ZONE NOT NULL, end_timestamp TIMESTAMP(6) WITH TIME ZONE NOT NULL, parameter TEXT NOT NULL, qualifier TEXT, units TEXT NOT NULL, post_process BOOLEAN, subtract NUMERIC(6,3), por_max_value NUMERIC(6,3), station_type CHARACTER(1), percentile_5 NUMERIC(6,3), data_type TEXT, period TEXT, CONSTRAINT pk_sls_telemetry_value_parent_id PRIMARY KEY (telemetry_value_parent_id));
DROP TABLE IF EXISTS station_imtd_threshold;
CREATE TABLE station_imtd_threshold (station_threshold_id BIGSERIAL NOT NULL, station_id BIGINT NOT NULL, fwis_code TEXT NOT NULL, fwis_type CHARACTER(1) NOT NULL, direction CHARACTER(1) NOT NULL, value NUMERIC NOT NULL, CONSTRAINT pk_station_imtd_threshold_id PRIMARY KEY (station_threshold_id));
DROP TABLE IF EXISTS station_ta_8km;
CREATE TABLE station_ta_8km (rloi_id INTEGER, fws_tacode TEXT);
DROP TABLE IF EXISTS station_ta_8km_2;
CREATE TABLE station_ta_8km_2 (rloi_id INTEGER, fws_tacode TEXT);
DROP TABLE IF EXISTS station_ta_8km_20220223_backup;
CREATE TABLE station_ta_8km_20220223_backup (rloi_id INTEGER, fws_tacode TEXT);
DROP TABLE IF EXISTS station_ta_8km_20220512_backup;
CREATE TABLE station_ta_8km_20220512_backup (rloi_id INTEGER, fws_tacode TEXT);
DROP TABLE IF EXISTS station_ta_8km_20220512
name: CI

on: [push, pull_request]
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Cache NPM dependencies
              uses: actions/cache@v3
              with:
                path: .
                key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                  ${{ runner.OS }}-npm-cache-

            - name: Install nodejs
              uses: actions/setup-node@v1
              with:
                node-version: "16.x"
            
            - name: Install node dependencies
              run: npm ci

            - name: Run linting
              run: npm run lint

            - name: Run unit tests
              run: |
                npm run unit-test
                sed -i 's/\/home\/runner\/work\/flood-data\/flood-data\//\/github\/workspace\//g' coverage/lcov.info

            - name: Start containers
              run: docker-compose -f "docker-compose.yml" up -d --build
            - uses: actions/cache@v3
              with:
                path: .
                key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}

            - name: see dir list
              run: docker info
              working-directory: .

            - name: Run Migrate
              run: |
                docker cp test/data/sql-scripts/u_flood.sql postgis:/ && docker exec postgis psql -U postgres -d flooddev -f /u_flood.sql
 
            - uses: actions/cache@v3
              with:
                path: .
                key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
                
            - name: NPM run integration tests
              env:
                LOCAL_TEST_ACCESS_KEY:  'AKIAIOSFODNN7EXAMPLE'
                LOCAL_TEST_ACCESS_SECRET: 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY'
                LOCAL_TEST_ENDPOINT: 'http://localhost:9444'
                LOCAL_TEST_STYLE_PATH: true
                LOCAL_TEST_VERSION: 'v4'
                NODE_ENV: 'LOCAL_TEST'
              run: |
                npm run integration-test


            - name: Stop containers
              if: always()
              run: docker-compose -f "docker-compose.yml" down -T
              working-directory: .

            - name: Analyse code quality
              uses: sonarsource/sonarcloud-github-action@master
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              with:
                args: >
                  -Dsonar.organization=defra
                  -Dsonar.projectKey=DEFRA_flood-data
                  -Dsonar.exclusions=**/node_modules/**,**/test/**,**/test-output/**,**/queries.js
                  -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
                  -Dsonar.javascript.exclusions=**/node_modules/**,**/test/**,**/test-output/**,**/queries.js
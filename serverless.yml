service: ${env:LFW_DATA_SERVICE_CODE}
provider:
  name: aws
  stackName: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}
  runtime: nodejs14.x
  role: ${env:LFW_DATA_SLS_LAMBA_ROLE}
  stage: ${env:LFW_DATA_TARGET_ENV_NAME}
  region: ${env:LFW_DATA_TARGET_REGION}
  profile: ${env:LFW_DATA_AWS_PROFILE}
  deploymentBucket:
    name: ${env:LFW_DATA_SLS_BUCKET}
  environment:
    stage: ${env:LFW_DATA_TARGET_ENV_NAME}
    LFW_DATA_FWIS_API_URL: ${env:LFW_DATA_FWIS_API_URL}
    LFW_DATA_DB_CONNECTION: ${env:LFW_DATA_DB_CONNECTION}
    LFW_DATA_FWIS_API_KEY: ${env:LFW_DATA_FWIS_API_KEY}
    LFW_DATA_SLS_BUCKET: ${env:LFW_DATA_SLS_BUCKET}
  vpc:
    securityGroupIds:
      - ${env:LFW_DATA_VPN_SECURITY_GROUP}
    subnetIds:
      - ${env:LFW_DATA_SUBNET_1}
      - ${env:LFW_DATA_SUBNET_2}
plugins:
 - serverless-layers
package:
 exclude:
   - test
functions:
  ffoiProcess:
    name: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}-ffoiProcess
    handler: lib/functions/ffoi-process.handler
    timeout: 120
    memorySize: 2048
    reservedConcurrency: 20
  rloiProcess:
    name: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}-rloiProcess
    handler: lib/functions/rloi-process.handler
    timeout: 120
    memorySize: 2048
    reservedConcurrency: 20
  stationProcess:
    name: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}-stationProcess
    handler: lib/functions/station-process.handler
    timeout: 240
  rloiRefresh:
    name: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}-rloiRefresh
    handler: lib/functions/rloi-refresh.handler
    timeout: 60
  fwisProcess:
    name: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}-fwisProcess
    handler: lib/functions/fwis-process.handler
    timeout: 120
  fgsProcess:
    name: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}-fgsProcess
    handler: lib/functions/fgs-process.handler
    timeout: 60
service: ${env:LFW_DATA_SERVICE_CODE}
provider:
  name: aws
  stackName: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}
  runtime: nodejs14.x
  role: ${env:LFW_DATA_SLS_LAMBA_ROLE}
  stage: ${env:LFW_DATA_TARGET_ENV_NAME}
  region: ${env:LFW_DATA_TARGET_REGION}
  profile: ${env:LFW_DATA_AWS_PROFILE}
  deploymentBucket:
    name: ${env:LFW_DATA_SLS_BUCKET}
  environment:
    stage: ${env:LFW_DATA_TARGET_ENV_NAME}
    LFW_DATA_FWIS_API_URL: ${env:LFW_DATA_FWIS_API_URL}
    LFW_DATA_DB_CONNECTION: ${env:LFW_DATA_DB_CONNECTION}
    LFW_DATA_FWIS_API_KEY: ${env:LFW_DATA_FWIS_API_KEY}
    LFW_DATA_SLS_BUCKET: ${env:LFW_DATA_SLS_BUCKET}
  vpc:
    securityGroupIds:
      - ${env:LFW_DATA_VPN_SECURITY_GROUP}
    subnetIds:
      - ${env:LFW_DATA_SUBNET_1}
      - ${env:LFW_DATA_SUBNET_2}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:Get*
            - s3:Describe*
            - s3:List*
          Resource:
            - arn:aws:s3:::${env:LFW_DATA_SLS_BUCKET}
            - arn:aws:s3:::${env:LFW_DATA_SLS_BUCKET}/*
        - Effect: Allow
          Action:
            - sqs:ReceiveMessage
            - sqs:GetQueueAttributes
            - sqs:SendMessage
          Resource:
            - arn:aws:sqs:us-east-1:#{AWS::AccountId}:${env:LFW_DATA_TARGET_ENV_NAME}-${self:service}-ProcessImtdQueue
            - arn:aws:sqs:us-east-1:#{AWS::AccountId}:${env:LFW_DATA_TARGET_ENV_NAME}-${self:service}-ProcessImtdQueueDeadLetter
plugins:
 - serverless-layers
package:
 exclude:
   - test
functions:
  ffoiProcess:
    name: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}-ffoiProcess
    handler: lib/functions/ffoi-process.handler
    timeout: 120
    memorySize: 2048
    reservedConcurrency: 20
  rloiProcess:
    name: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}-rloiProcess
    handler: lib/functions/rloi-process.handler
    timeout: 120
    memorySize: 2048
    reservedConcurrency: 20
  stationProcess:
    name: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}-stationProcess
    handler: lib/functions/station-process.handler
    timeout: 240
  rloiRefresh:
    name: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}-rloiRefresh
    handler: lib/functions/rloi-refresh.handler
    timeout: 60
  fwisProcess:
    name: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}-fwisProcess
    handler: lib/functions/fwis-process.handler
    timeout: 120
  fgsProcess:
    name: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}-fgsProcess
    handler: lib/functions/fgs-process.handler
    timeout: 60
  
  imtdFileCreateProcess:
    name: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}-imtdFileCreateProcess
    handler: lib/functions/imtd-create-file-process.handler
    timeout: 120
    memorySize: 2048
    reservedConcurrency: 20
    # events:
    #   # Invoke Lambda function every 2nd minute from Mon-Fri
    #   - schedule: cron(0/2 * ? * MON-FRI *)
    
  imtdDownloadProcess:
    name: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}-imtdDownloadProcess
    handler: lib/functions/imtd-download-process.handler
    timeout: 120
    memorySize: 2048
    reservedConcurrency: 30
    events:
      - s3:
          bucket: ${env:LFW_DATA_SLS_BUCKET}
          event: s3:ObjectCreated:*
          existing: true
          rules:
            - suffix: .json
            - prefix: imtd/latest

  imtdSaveStationsToDBProcess:
    name: ${env:LFW_DATA_TARGET_ENV_NAME}${self:service}-imtdSaveStationsToDBProcess
    handler: lib/functions/imtd-save-stations-to-db-process.handler
    timeout: 120
    memorySize: 2048
    reservedConcurrency: 30
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - ProcessImtdQueue
              - Arn
          batchSize: 1

resources:
  Resources:
    ProcessImtdQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${env:LFW_DATA_TARGET_ENV_NAME}-${self:service}-ProcessImtdQueue
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - ProcessImtdQueueDeadLetter
              - Arn
          maxReceiveCount: 3

    ProcessImtdQueueDeadLetter:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${env:LFW_DATA_TARGET_ENV_NAME}-${self:service}-ProcessImtdQueueDeadLetter